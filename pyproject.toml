[project]
name = "lzallright"
version = "0.2.6"
authors = [
    {name = "László Vaskó", email = "1771332+vlaci@users.noreply.github.com"},
]
dependencies = []
requires-python = ">=3.8"
dynamic = [
    'description',
    'license',
    'readme',
]

[project.urls]
Homepage = "https://vlaci.github.io/lzallright"
Repository = "https://github.com/vlaci/lzallright"
Changelog = "https://github.com/vlaci/lzallright/blob/main/CHANGELOG.md"

[dependency-groups]
dev = [
    "ruff>=0.12,<0.13",
    "mypy>=1.2,<2.0",
    "towncrier>=24.8.0,<25.0.0"
]
test = [
    "pytest>=8.3.3,<9.0.0"
]
docs = [
    "mkdocs>=1.4.3",
    "mkdocstrings[python]>=0.22.0",
    "mkdocs-material>=9.1.14"
]

[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[tool.maturin]
python-source = "python"
module-name = "lzallright._lzallright"
features = [
  "pyo3/extension-module",  # This is an extension module
  "pyo3/abi3-py38"          # https://docs.python.org/3/c-api/stable.html
]

[tool.towncrier]
directory = "changelog.d"
filename = "CHANGELOG.md"
start_string = "<!-- towncrier release notes start -->\n"
underlines = ["", "", ""]
template = "changelog.d/changelog_template.jinja"
title_format = "## [{version}](https://github.com/vlaci/lzallright/tree/v{version}) - {project_date}"
issue_format = "[#{issue}](https://github.com/vlaci/lzallright/issues/{issue})"

[[tool.towncrier.type]]
directory = "deprecated"
name = "Deprecated"
showcontent = true

[[tool.towncrier.type]]
directory = "added"
name = "Added"
showcontent = true

[[tool.towncrier.type]]
directory = "changed"
name = "Changed"
showcontent = true

[[tool.towncrier.type]]
directory = "fixed"
name = "Fixed"
showcontent = true

[tool.ruff.lint]
select = [
  "A",      # flake8-builtins
  "ARG",    # flake8-unused-arguments
  "B",      # flake8-bugbear
  "C90",    # mccabe
  "C4",     # flake8-comprehensions
  "COM818", # flake8-commas; trailing-comma-on-bare-tuple
  "D",      # pydocstyle
  "E",      # pycodestyle (errors)
  "F",      # pyflakes
  "FBT",    # flake8-boolean-trap
  "G",      # flake8-logging-format
  "I",      # isort
  "N",      # pep8-naming
  "PIE",    # flake8-pie
  "PYI",    # flake8-pyi
  "PL",     # pylint
  "PT",     # flake8-pytest-style
  "PTH",    # flake8-use-pathlib
  "RET",    # flake8-return
  "RUF",    # ruff's own lints
  "RSE",    # flake8-raise
  "S",      # flake8-bandit
  "SIM",    # flake8-simplify
  "SLF",    # flake8-self
  "T10",    # flake8-debugger
  "T20",    # flake8-print
  "TCH",    # flake8-type-checking
  "TRY",    # tryceratops
  "UP",     # pyupgrade
  "W",      # pycodestyle (warnings)
]

ignore = [
  "D203",    # one-blank-line-before-class:    D211 (no-blank-line-before-class) is used instead
  "D213",    # multi-line-summary-second-line: D212 (multi-line-summary-first-line) is used instead
  "E501",    # line-too-long:                  Let black handle line length violations
  "PYI021",  # docstring-in-stub:              We document in the stub
  "UP006",   # non-pep585-annotation:          For Python 3.8 compatibility
  "UP007",   # non-pep604-annotation:          For Python 3.8 compatibility
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
  "S101",    # assert:                         Enable usage of asserts
  "D1",      # undocumented-*
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
known-first-party = ["lzallright"]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false
parametrize-names-type = "csv"
